[{"C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\index.js":"1","C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\App.js":"2","C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\tasks.js":"4","C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\SignUp.js":"5","C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\SignIn.js":"6","C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\Navbars.js":"7","C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\Projects.js":"8","C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\Project.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":784,"mtime":1610133649976,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":4687,"mtime":1610435758561,"results":"14","hashOfConfig":"11"},{"size":2714,"mtime":1610303281186,"results":"15","hashOfConfig":"11"},{"size":2665,"mtime":1610303491861,"results":"16","hashOfConfig":"11"},{"size":727,"mtime":1610264874490,"results":"17","hashOfConfig":"11"},{"size":3018,"mtime":1610275375588,"results":"18","hashOfConfig":"11"},{"size":1034,"mtime":1610134252138,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1kt3wqa",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\index.js",[],["41","42"],"C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\App.js",[],"C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\tasks.js",["43"],"import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\r\nimport _ from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Task() {\r\n  const {projectID } = useParams()\r\n  const [text, setText] = useState(\"\")\r\n  const [state, setState] = useState({\r\n    \"todo\": {\r\n      title: \"Todo\",\r\n      items: []\r\n    }, \r\n    \"in-progress\": {\r\n      title: \"In Progress\",\r\n      items: []\r\n    },\r\n    \"done\": {\r\n      title: \"Completed\",\r\n      items: []\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n  \tfetch(`http://localhost:5000/api/db/tasks/${projectID}`).then(res => res.json()).then(res => {\r\n  \t\tconst newstate = {\r\n  \t\t\t...state,\r\n  \t\t\ttodo: {\r\n  \t\t\t\t...state.todo,\r\n  \t\t\t\titems: [...state.todo.items, ...res.tasks]\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\tsetState(newstate)\r\n  \t})\r\n  }, []);\r\n\r\n  const handleDragEnd = ({destination, source}) => {\r\n    if (!destination) {\r\n      return\r\n    }\r\n\r\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\r\n      return\r\n    }\r\n\r\n    // Creating a copy of item before removing it from state\r\n    const itemCopy = {...state[source.droppableId].items[source.index]}\r\n\r\n    setState(prev => {\r\n      prev = {...prev}\r\n      // Remove from previous items array\r\n      prev[source.droppableId].items.splice(source.index, 1)\r\n\r\n\r\n      // Adding to new items array location\r\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy)\r\n\r\n      return prev\r\n    })\r\n    console.log(source, destination, itemCopy);\r\n    console.log(destination.droppableId)\r\n    setTimeout(() => {\r\n      fetch(`http://localhost:5000/api/db/tasks/${projectID}/${itemCopy.taskID}`, \r\n      {\r\n        method: 'PUT',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }, \r\n        body: JSON.stringify({ \r\n          status: destination.droppableId\r\n        })\r\n      })\r\n    }, 200);\r\n   }\r\n\r\n   const addItem = () => {\r\n\r\n    fetch(`http://localhost:5000/api/db/tasks/${projectID}`, \r\n      {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }, \r\n        body: JSON.stringify({ \r\n          task_description: text,\r\n          projectID: projectID\r\n        })\r\n      }).then(res => res.json()).then(res => {\r\n        const newState = {\r\n          ...state,\r\n          todo: {\r\n            ...state.todo,\r\n            items: [...state.todo.items, res]\r\n          }\r\n        }\r\n        setState(newState);\r\n      });\r\n\r\n    setText(\"\")\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <div className=\"Title\">\r\n                 <h1>Tasks</h1>\r\n      </div>\r\n     <div className=\"formular\">\r\n    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n    <button onClick={addItem}>Add</button>\r\n    </div>\r\n    <div className=\"columns\">\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        {_.map(state, (data, key) => {\r\n          return(\r\n            <div key={key} className={\"column\"}>\r\n              <h3>{data.title}</h3>\r\n              <Droppable droppableId={key}>\r\n                {(provided, snapshot) => {\r\n                  return(\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className={\"droppable-col\"}\r\n                    >\r\n                      {data.items.map((el, index) => {\r\n                        return(\r\n                          <Draggable key={el.taskID} index={index} draggableId={`${el.taskID}`}>\r\n                            {(provided, snapshot) => {\r\n                              console.log(snapshot)\r\n                              return(\r\n                                <div\r\n                                  className={`item ${snapshot.isDragging && \"dragging\"}`}\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                >\r\n                                  {el.task_description}\r\n                                </div>\r\n                              )\r\n                            }}\r\n                          </Draggable>\r\n                        )\r\n                      })}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )\r\n                }}\r\n              </Droppable>\r\n            </div>\r\n          )\r\n        })}\r\n      </DragDropContext>\r\n      </div>\r\n     \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Task;","C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\SignIn.js",[],"C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\Navbars.js",[],"C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\Projects.js",[],"C:\\Users\\Ciprian\\Desktop\\ReactFrontend\\frontend\\src\\components\\Project.js",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":36,"column":6,"nodeType":"52","endLine":36,"endColumn":8,"suggestions":"53"},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'projectID' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["58"],["56"],["57"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [projectID, state]",{"range":"61","text":"62"},[867,869],"[projectID, state]"]